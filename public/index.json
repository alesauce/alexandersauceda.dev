[{"content":"","date":null,"permalink":"/tags/engineering/","section":"Tags","summary":"","title":"Engineering"},{"content":"","date":null,"permalink":"/tags/nix/","section":"Tags","summary":"","title":"Nix"},{"content":"","date":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":null,"permalink":"/tags/potatomath/","section":"Tags","summary":"","title":"Potatomath"},{"content":"Project Output #Before I say anything else, here is the link to the repo on GitHub Potatomath project repo.\nBackground #Some time ago, a friend of mine posited a thought-provoking question: if he only bought potatoes to feed his family of five, what was the minimum dollar amount that he could feed his family for in a given month? He asked this question to a team of engineers, and we promptly spent an entire lunch break discussing the various foods that could be substituted for the potatoes (rice was our top pick) and different ways that you could improve the process to calculate this cost to optimize which food you\u0026rsquo;re buying from month to month. From this simple, dumb question spawned this project idea: create an application that can calculate the approximate cost to feed a family of a given size with a given food item. This project is not medical advice and is for entertainment purposes only. I am not a medical professional nor am I even qualified to figure out my own dietary needs. Please don\u0026rsquo;t use anything in this project to actually figure out how to feed anyone. Now, I am a known scope-creeper. I can easily take a request to make a calculator that adds 2+2 and then start designing a Wolfram-Alpha competitor. It\u0026rsquo;s a problem that I am actively working on, and this seems like a great opportunity to take a step in the right direction. I spent a few minutes scribbling down ideas for this project and then separated those ideas into prioritized tiers ranging from P0 (first to implement) to P5 (least important).\nvia GIPHY\nMe designing \"fizzbuzz\" Prioritized tiers #P0 #This project is an opportunity to learn Rust from scratch, and the P0 reflects that fact. It\u0026rsquo;s essentially a \u0026ldquo;Hello, World!\u0026rdquo; program with extra steps. My goals with P0 were:\nRust package that builds on my machine. Package that can take user input of a number of people and calculate the cost to feed that amount of people. Should only use fixed values where a later priority level would require user input or an API call. Planned uses of fixed/harcoded values: Price of a 5 pound bag of potatoes. \u0026ldquo;P1: Allow the user of the package to pick a type of food from a list and fetch the price from the Internet.\u0026rdquo; Given that requirement, I\u0026rsquo;ll use a fixed value as a placeholder for now and retrieve the price from an API later. Calories per person. \u0026ldquo;P3: Allow users to modify the required average caloric value for the given family size.\u0026rdquo; I\u0026rsquo;ll use 2000 as a hardcoded value for now and as the default in the future. Calories per 5 pound bag of potatoes. \u0026ldquo;P1: Allow the user of the package to pick a type of food from a list and fetch the price from the Internet.\u0026rdquo; I think calories per unit is something I should get from an API or database when I retrieve the price as well. This would make the price calculations actually make sense as well. P1 through P5 #These points are all subject to change because this is a dumb project that I\u0026rsquo;m doing for fun when I have time outside of my full time job and various other responsibilities. I tried to write all of my priority levels as one sentence success criteria to keep my overall goals simple. These will likely get fleshed out more as I actually devote more thought to them.\nP1: Allow the user of the package to pick a type of food from a list and fetch the price from the Internet. P2: Create a front end for this application and host it somewhere that is publicly accessible. P3: Allow users to modify the required average caloric value for the given family size. P4: Allow users to specify individuals for the caloric calculations (e.g. 3 kids, 2 adults) and modify caloric calculations for both. Gotta support people going into bulking season. P5: Allow users to get prices in non-US currencies. I\u0026rsquo;m a man of the world, after all. via GIPHY\nDevelopment process #Getting started #I decided to use Crane (a Nix library for building Cargo projects) for my development environment and build system. The Nix language, build system, and configuration management tooling has a growing influence on my life outside of work. Crane\u0026rsquo;s quick start flake came in handy as I got started. After reading a few online tutorials and some of the wonderful Rust book, I came up with this basic plan of attack:\nTake in a string input from std::io from the user at the command line Convert that to an i32 Multiply that number of people by a hardcoded value of potatoes price and how much is needed to feed people Output the correct number Baby\u0026rsquo;s first error #My first error came quickly. I started off trying to use unwrap() on its own to convert the String input from the user to an i32, which gave me a wonderful stack trace that told me in no uncertain terms that I wasn\u0026rsquo;t in Python-land anymore. Not to worry though, because I\u0026rsquo;ve been programming just long enough to know how to use search engines ( Perplexity in this case).\nThe summary and sources from this search recommended using unwrap with match logic to handle errors rather than just letting the unwrap() function go straight to panicking. After using match to output the malformed input that was causing the panic, I realized that I needed to use the trim() function to strip whitespace. After this fix, I was greeted with the following output and felt like the most brilliant human on Earth:\nPlease input the number of people you are feeding. 5 You input 5 people. Your total cost per month is: $75. Don\u0026#39;t forget the multivitamin! Finishing up # This first commit was basically just one long main() function in my new Rust project. I wanted to feel like a real engineer and add some unit tests, which meant that I needed to break out some of the logic into separate, smaller functions. I did this over three different commits ( first, second, and third) as I worked on the module more and found better ways to split up functionality to add useful testing. Adding unit tests inside the same module as the function that I was writing was a new concept to me, but I do enjoy having all the functionality for code wrapped up in one file instead of having to toggle between different directories to review the function that I\u0026rsquo;m trying to test.\nThe weird formatting of the initial output also bugged me to no end. After another search and trying out a few things, it turned out it was because I was just using the raw String value from the user for this instead of formatting (e.g. using trim()).\nNext steps #I am going to start working on the P1 as I have time. Looking at my calendar for the summer, I\u0026rsquo;m a little worried at how infrequently \u0026ldquo;as I have time\u0026rdquo; is going to come, but I will just have to try to keep my goals realistic and try to chip away at this a bit at a time. So far, some of the goals I have for P1 after merging P0 outside of the one sentence statement above:\nWrite a README for the GitHub repo Create a CI job using GitHub Actions and the Nix flake Refactor potatomath flake to use flake-parts or Nix glue code instead of flake-utils Potentially change P1 of potatomath to use a database that I create and populate to store and retrieve the food prices from instead of API calls Thanks for reading!\n","date":"14 June 2024","permalink":"/posts/potatomath-p0/","section":"Posts","summary":"Project Output #Before I say anything else, here is the link to the repo on GitHub Potatomath project repo.","title":"Potatomath P0"},{"content":"","date":null,"permalink":"/tags/rust/","section":"Tags","summary":"","title":"Rust"},{"content":"","date":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"Problem Statement #It\u0026rsquo;s often very clunky and manually taxing to manage a Roll20 character sheet. Especially for first timers, it can be downright challenging. It also adds a lot of mental overhead from switching back and forth and reviewing the rule sheet. There are a lot of rules and nuance in DnD to track, and experiences like leveling up a character can be intensely cumbersome. If there was a way to automatically manage some of these rules in the background (perhaps with RAW defaults at first, then find ways to make those configurable), it would significantly alleviate the overhead in creating and managing a new character for all players, especially new players.\nSolution #High-Level Overview #I will create a web app with a Python backend and a Svelte frontend utilizing the Model-View-Controller paradigm. I am choosing Python to try using more idiomatic tooling within the Python ecosystem, versus the Amazon-internal tooling I\u0026rsquo;m used to. The primary focus at first will be the backend, so a more complete design of the frontend is coming later. I would also eventually like to look at using Tauri to bundle a desktop app as well with a local-first approach. The data storage layer will utilize Surreal DB, because it is feature-rich, is being actively developed, and is multi-paradigm for ultimate flexibility.\nRequirements #Table Stakes from Roll20 # Attributes Modifiers Proficiency bonus Saving throws Skills Passive wisdom Proficiencies and languages Coinage Items, equipped or not, and weight If items have attacks: item attacks, modifiers, damage type Feats Resources Short/long rest replenishment AC Initiative Speed Freeform bio Personality traits Ideals Bonds Flaws Spell levels Spell slots Free-form spell additions Prepared spells Spell slots per level Ideas for Improvement # Automatically pull info from standard spells and items to fill out free form areas Use the 5E API as the baseline for classes, attributes, etc. Import custom rules, classes, weapons, etc. as JSON files with validations Automatically track temporary stats - e.g. hp, speed, etc. in wild shape Automatic attacks with items - e.g. hit die, then roll damage automatically with modifiers Calculate rolls with a proficiency or skill - e.g. \u0026ldquo;perform an investigation check\u0026rdquo; Able to export all application data (e.g. filled out character sheet) to a standard data format, most likely JSON Give users the ability to create custome views - e.g. a view of their spells and equipped weapons in a battle Import custom rulesets from a standard data format, most likely JSON Data Access Patterns #Before I decide on the datastore I want to use, I think it\u0026rsquo;ll be helpful to think about some of the potential data access patterns I want to implement. This list will obviously not be exhaustive and is subject to change as the app develops. Creating a baseline of potential access patterns will provide some datapoints on what kind of datastore I need and what potential features I need. This is probably also worth asking a few people for input, so it\u0026rsquo;s not just my thoughts going into it.\nAnyway, without further ado, the data access patterns identified during brainstorming:\nRange and equivalence queries over numerical values Spell levels Damage output for weapons Weight for equipment Monster CR for druids Casting time Range Duration Area of effect Equivalence query for string fields and boolean fields Names of anything If a spell is a ritual If a spell is concentration Damage types Base stats and stat modifiers Full text search This would likely be the most useful with descriptions, but could have use finding certain spells or materials if you aren\u0026rsquo;t sure of something Design Document Disclaimer #Rather than design in depth until I have what I feel is the \u0026ldquo;best solution\u0026rdquo;, I am going to start with the basics I have and start coding the bits and pieces I have already identifed as requirements. If I start small, I can always find new ways to fit the pieces together.\nI am doing my best to get out of my own way on this. I recently read an article on the concept of \u0026ldquo;Question-Driven Development\u0026rdquo;. Namely, it involves starting with one small problem and going until you hit a block. Ask how to solve that block, then go until you hit the next block, and so on. It has really stuck with me, if only because I feel like I have been doing this subconsciously throughout my technical career - do what I can. Get an error. Figure out how to solve that error. Learn a ton of other things on the way.\nI\u0026rsquo;m clearly far from unique with that approach. But reading the article made me realize how much I rely on that. As I have mentioned in [other articles](link to perfect as enemy), I have a longstanding problem of unreasonable expectations for myself. Figure out one problem, not the entire project.\nUser Flows #Summing up the above requirements and ideas for improvement, these are the user flows I can see forming the core of this application:\nCreating a new character sheet from scratch Importing a character sheet from a JSON file Exporting a character sheet Importing custom rulesets/spells/classes/etc. Adding in new items to their inventory Leveling up a character Using resources, either physical or magical (e.g. spell slots) \u0026ldquo;Refreshing\u0026rdquo; stats (e.g. spell slots) after long rests or similar events Creating custom views in the character sheet - for instance, showing only Switching to new views of the character sheet (e.g. druid in wild shape) Making rolls based on attributes or skills Filter items within the UI, e.g. filtering spells by school or type This list will likely be updated as I continue working on it, but I wanted to start with these basics because that will give me some solid direction to start working with.\nNext Steps #At the core of the core in the user journeys listed above is creating or importing a new character sheet. What\u0026rsquo;s a character sheet application without being able to create one?\nWith that in mind, I will start with that as the first user flow to tackle.\n","date":"20 October 2023","permalink":"/posts/dnd-character-sheet-app-design-doc-v1/","section":"Posts","summary":"Problem Statement #It\u0026rsquo;s often very clunky and manually taxing to manage a Roll20 character sheet.","title":"Creating a New DnD Character Sheet Application"},{"content":"","date":null,"permalink":"/tags/design/","section":"Tags","summary":"","title":"Design"},{"content":"","date":null,"permalink":"/tags/development/","section":"Tags","summary":"","title":"Development"},{"content":"","date":null,"permalink":"/tags/dungeons-and-dragons/","section":"Tags","summary":"","title":"Dungeons-and-Dragons"},{"content":"","date":null,"permalink":"/tags/fullstack/","section":"Tags","summary":"","title":"Fullstack"},{"content":"","date":null,"permalink":"/tags/open-source/","section":"Tags","summary":"","title":"Open-Source"},{"content":"","date":null,"permalink":"/tags/projects/","section":"Tags","summary":"","title":"Projects"},{"content":"","date":null,"permalink":"/tags/python/","section":"Tags","summary":"","title":"Python"},{"content":"As you can probably tell from the home page, my name is Alexander. I am a born tinkerer, analyzer, and lifelong learner who loves the challenge of building things with code. I don\u0026rsquo;t know how, but I became one of those people who logs off from their engineering job and boots up their personal computer to work on some engineering projects. 😄\nThroughout high school and my first two years of college, I was dead set on becoming a lawyer. However, there was always a part of me that was enthralled by the tech world because of the infinite learning possibilities and the power to create new things. I changed my major a few times in college before settling on Information Science. After college, I got a job with Amazon as an Area Manager in Fulfillment. After three years as an Area Manager, I transitioned to a Program Manager role with the Supply Chain Execution team.\nI rediscovered my love of automation after my first month of manually generating reports from downloaded datasets formatted in Excel. SQL and Excel became my favored companions as I sought to reduce all of my team\u0026rsquo;s toil stemming from manual report generation. My dive into the world of automation reignited my passion for all things technical, leading me to take on a role as a Support Engineer with Amazon Explore. Using the skills I learned as a Support Engineer, I transitioned into a new role as Systems Engineer with Amazon Photos, where I am as of writing.\nvia GIPHY\nMy teammates after counting all the hours I saved them. My most important realization since working as an engineer is that the only limit to \u0026ldquo;things left to learn\u0026rdquo; is someone\u0026rsquo;s time and desire. This is also at the heart of my love for the tech world - there is always something new to learn, some new way to stretch my abilities. The fire to learn has aided my growth as a developer, pushing me to partner with senior developers to improve my code and understand more of the why behind our design and implementation decisions, and not just the how to execute.\nI am now seeking a role as a full-time developer where I can contribute my engineering skills and continue to expand my skillset.\n","date":"27 September 2023","permalink":"/about/","section":"","summary":"As you can probably tell from the home page, my name is Alexander.","title":"About Me"},{"content":"","date":null,"permalink":"/tags/software-development/","section":"Tags","summary":"","title":"Software-Development"},{"content":"The \u0026ldquo;Joys\u0026rdquo; of Learning #I love the feeling of adding new skills and data points to my resume. For me, that feels like the exclamation point on top of whatever I was trying to accomplish. On the flip side, my resume has occasionally, slightly overstated some of my accomplishments or left my skill level\u0026hellip; open to interpretation. Recently, I\u0026rsquo;ve had a few occasions to reflect on my current skillset versus where I want to be. Creating this website has also been a sobering reminder of the gap between where I am and where my goals lie.\nOriginally, the purpose of this website was to give myself an avenue where I can show off my curiosity and my ability to learn. Due to time constraints and any other number of excuses though, it still sits mostly barren. Something that is extra galling to me is the juxtaposition of the tag line on the front page and the content available - I explicitly mention diving into new things and writing through those experiences. In contrast, the two articles present are more related to some slightly more abstract concepts like goals setting and mindsets.\nAs I wrote about previously, it\u0026rsquo;s better to release something that is \u0026ldquo;good enough\u0026rdquo; rather than hold out for something \u0026ldquo;perfect\u0026rdquo; and end up with no output at all. Admittedly, I would love to write The Definitive Resource on Going from \u0026ldquo;Ansible Zero\u0026rdquo; to \u0026ldquo;Ansible Hero\u0026rdquo;. However, I am unsure who would consider me an \u0026ldquo;Ansible Hero\u0026rdquo; outside of someone who either: A) is inebriated beyond the point of coherency, or B) hasn\u0026rsquo;t seen or interacted with a computer since 1975.\nGiven my current reality, I will have to be be realistic and instead write:\nAn Idiot\u0026rsquo;s Journey into Automation with Ansible #My therapist probably won\u0026rsquo;t like the way I\u0026rsquo;m talking about myself, but the good news is that she won\u0026rsquo;t read it. Don\u0026rsquo;t be a snitch!\nvia GIPHY\nDon't forget! Now that the standard \u0026ldquo;Internet recipe with a three-page backstory\u0026rdquo; formalities are out of the way, I should probably give a little bit of context on what I am attempting to do so readers can decide if this post will actually help them or not. This was my first time attempting to create an Ansible \u0026ldquo;role\u0026rdquo; link to ansible role documentation here, or a set of tasks that could be used in other playbooks. I already had a playbook that completed most of this task from a job interview, so this was mostly about migrating it to a role that could be used by others. The tasks I wanted my role to perform were:\nSet up a new user so the default user on the machine could be deleted Install SSHD and upload a lightly opinionated config file Change the hostname on the machine Validate said config file Install a Tailscale client link to Tailscale page and start the Tailscale service Install Prometheus node exporter to retrieve metrics Finally, I wanted to test out new Ansible role using Ansible Molecule and push that new Ansible role to my GitHub and Ansible Galaxy profiles. Feel free to check out the repo for the Ansible role created in this article here! You can view the commit history to see some of the diffs where I figured out solutions to some of the problems I ran into. Also link to Ansible Galaxy here.\nBuilding the Supporting Cast # via GIPHY\nMaybe not quite this level of a supporting cast... Before I could get too into the weeds, I needed to ensure that I had the tools to build and test this role. Specifically, I needed: - an installation of Docker that did not require `sudo` to use, - an installation of Ansible and Ansible Molecule to test the role, - Molecule configured to use the Docker driver, and - verification that all of the above worked correctly. First, I followed the guide to configure Docker for non-sudo access. When someone has already documented exact steps for you to follow, turns out pretty much anything is easy to accomplish!\nNext, I started working on the Ansible Molecule Getting Started guide. I will neither confirm nor deny that I was a tad intoxicated when I started working on this part. Don\u0026rsquo;t judge me - it was a Friday night after a long work week. Because of my\u0026hellip; shall we say, less-than-optimal brainpower available, I had to create, then delete, then re-create a new Ansible role directory a couple of times until I remembered to use the --driver-name docker flag for the molecule init role. Was there probably a way to fix it after creating the role? Most definitely. But my thought process was it would be easier to just delete and re-create. If your mouth is hanging open in slack-jawed amazement at the level of my idiocy, just remember that I warned you in the title.\nvia GIPHY\nI don't appreciate you attacking me like this Giphy, but well played nonetheless. Anyway, once I got the role set up, I wanted to test that it worked properly with the basic scaffold that a new Molecule project starts with before I started throwing my own nonsense in there. I started running the commands from the Run test sequence commands section of the guide. Since I had followed the guide religiously up to this point, obviously the commands all worked the first time and I was on easy street right? WRONG. I was able to create a container with $ molecule create and see said container with $ molecule list, but when I tried to run $ molecule converge, I promptly received the below error:\nfatal: [ubuntu_instance]: FAILED! =\u0026gt; {\u0026#34;ansible_facts\u0026#34;: {}, \u0026#34;changed\u0026#34;: false, \u0026#34;failed_modules\u0026#34;: {\u0026#34;ansible.legacy.setup\u0026#34;: {\u0026#34;ansible_facts\u0026#34;: {\u0026#34;discovered_interpreter_python\u0026#34;: \u0026#34;/usr/bin/python\u0026#34;}, \u0026#34;failed\u0026#34;: true, \u0026#34;module_stderr\u0026#34;: \u0026#34;/bin/sh: 1: /usr/bin/python: not found\\n\u0026#34;, \u0026#34;module_stdout\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;msg\u0026#34;: \u0026#34;The module failed to execute correctly, you probably need to set the interpreter.\\nSee stdout/stderr for the exact error\u0026#34;, \u0026#34;rc\u0026#34;: 127}}, \u0026#34;msg\u0026#34;: \u0026#34;The following modules failed to execute: ansible.legacy.setup\\n\u0026#34;} And, well\u0026hellip;\nThe Head-Banging Begins #While looking up this error message, I found a few different articles that discussed setting the environment variable on the host running Ansible, and I tried different solutions for a few hours before I called it quits for the night. When I picked up the issue again the next day with a, ahem, clearer mind, I found this GitHub issue that helped me find the true root cause of the problem. Tl;Dr: The interpreter issue isn\u0026rsquo;t with the local host running Ansible, but is instead on the remote host that I was trying to run Ansible on (in this case, a Docker container.) After using molecule login and installing Python on the container, I no longer got this error. To avoid this issue happening every time I booted up a new test, I then changed the base image the test was using to the Python official python:3.11.3-bullseye image.\nDuring these trials, I also spent about 15 minutes staring at the wall and formulating plans to uninstall Ansible, install a fresh copy of Pop! OS, and pick a new configuration management tool. I also spent another 5 minutes comparing Chef, SaltStack, and Puppet to determine my new choice, all while repeating \u0026ldquo;Ansible is dumb. It\u0026rsquo;s the tool\u0026rsquo;s fault, not mine. I\u0026rsquo;m gonna use a REAL config manager tool now and it\u0026rsquo;ll solve these problems.\u0026rdquo; Seriously - I wish I was kidding. Thankfully, cooler heads prevailed and I decided to figure out the issue.\nvia GIPHY\nMy forehead callus is pretty tough these days... After I installed Python on the Molecule-created container, I (of course) received a new error!\nfatal: [debian]: UNREACHABLE! =\u0026gt; {\u0026#34;changed\u0026#34;: false, \u0026#34;msg\u0026#34;: \u0026#34;Failed to create temporary directory. In some cases, you may have been able to authenticate and did not have permissions on the target directory. Consider changing the remote tmp path in ansible.cfg to a path rooted in \\\u0026#34;/tmp\\\u0026#34;, for more error information use -vvv. Failed command was: ( umask 77 \u0026amp;\u0026amp; mkdir -p \\\u0026#34;` echo ~/.ansible/tmp `\\\u0026#34;\u0026amp;\u0026amp; mkdir \\\u0026#34;` echo ~/.ansible/tmp/ansible-tmp-1681796130.0149798-31391-117799164586022 `\\\u0026#34; \u0026amp;\u0026amp; echo ansible-tmp-1681796130.0149798-31391-117799164586022=\\\u0026#34;` echo ~/.ansible/tmp/ansible-tmp-1681796130.0149798-31391-117799164586022 `\\\u0026#34; ), exited with result 1\u0026#34;, \u0026#34;unreachable\u0026#34;: true} This one was a bit simpler - because I had changed the base image for the test, Molecule was expecting a different image when I started the test. After running molecule reset and molecule create, I stopped receiving this error and the standard Molecule scaffold test worked!\nStarting to Build Some Confidence #Once I was able to run the Molecule test command, I started to move my existing playbook into the Molecule tasks/main.yml file. Initially, I made some dumb mistakes like forgetting to quote template variables in the YAML file. Example:\n# Bad version example_task: {new_user_name} # Good version example_task: \u0026#39;{new_user_name}\u0026#39; I\u0026rsquo;m not the biggest fan of all of Ansible\u0026rsquo;s error messages, but for the dumb-dumb mistakes like these, they were super helpful. Note that this errors out only if the template variable is the first value for a given key.\nCorrecting dumb syntax errors took me a few minutes, then the actual tasks could start running on the Molecule testing image. The first issue I ran into here was an error after installing sshd and trying to validate the sshd_config file: \u0026quot;Missing privilege separation directory: /run/sshd\\r\\n\u0026quot;. Searching for a solution lead me to this GitHub issue, which directed me to create a new directory at /var/run/sshd to allow OpenSSH to create and validate the new config correctly.\nHowever, SSH configuration wasn\u0026rsquo;t done throwing curveballs at me. My next attempt lead to a new error: \u0026quot;System has not been booted with systemd as init system (PID 1). Can't operate.\\nFailed to connect to bus: Host is down\u0026quot;. More searching and Stack Overflow browsing ensued, which lead me to realize that Docker containers do not come with SystemD because of compatibility issues with the virtualization. Thankfully, the wonderful wide world of the Internet meant that someone smarter than me had already encountered this issue and solved it. I found this StackOverflow answer that suggested using the Python script in this GitHub repo to emulate systemctl functionality for Ansible\u0026rsquo;s benefit. I added this script to my running container with the below commands:\n# pull the script to the local machine curl https://github.com/gdraheim/docker-systemctl-replacement/blob/master/files/docker/systemctl3.py \u0026gt; /usr/bin/systemctl # check if the other systemctl file exists and link to new systemctl if so test -L /bin/systemctl || ln -sf /usr/bin/systemctl /bin/systemctl # make the script executable chmod +x /usr/bin/systemctl After these changes to the running Molecule container, the new role to configure a new Linux server worked like a charm 💯💯.\nvia GIPHY\nDancing my way to the kitchen for a victory snack. What\u0026rsquo;s This? An Actual Artifact? #Alright, alright, I can hear the judgement already. \u0026ldquo;But Alexander,\u0026rdquo; you\u0026rsquo;re whining, \u0026ldquo;if you made these changes to the container manually, they aren\u0026rsquo;t going to persist and your test case is useless.\u0026rdquo; Well, thank you for your very valid criticism. I also had the same thought after I finished my brief celebration.\nSince I\u0026rsquo;m an amazing engineer, I had taken notes of all of the janky workarounds I implemented to make the test setup with the Molecule container work. With those notes, it was a simple ten minute task to create and build a new custom Docker image for this task. I couldn\u0026rsquo;t think of any more fitting name than frankenstein-container because the Dockerfile definitely gives off the \u0026ldquo;cobbled together by a mad scientist\u0026rdquo; vibe.\nOf course, since I\u0026rsquo;m such an amazing engineer I had to fuck up at least one more thing before I was done. Initially, the CMD in the Dockerfile was blank, so the container exited immediately after starting and I received the same failed to create tmp directory error as above. Thanks to all of the time spent correcting my own mistakes throughout the duration of this project, it was a simple matter to inspect the container and the logs and find the issue. After adding a new CMD, the role worked as expected on the pile of shit beautiful new Docker container. Wrapping up with a few git push commands and a docker image push left me staring at the computer screen and marveling at my own genius creating a solution to a problem solved years earlier by countless other people.\nvia GIPHY\nPeople staring at my GitHub profile like My next steps from here are to make it truly cross-distro and use some more of the Ansible distro-agnostic commands instead of Debian-focused. I also have a few other playbooks from the same job interview for installing Nagios, HAProxy as a load balancer (along with a custom Nagios plugin for monitoring HAProxy), locking down a cluster with firewall rules, and creating a bastion host for securing SSH access to a cluster of servers. Since I couldn\u0026rsquo;t find those roles on Ansible Galaxy when I was doing the job interview, I am going to assume that the world is crying out for them. As a man of the people, I must answer this need.\nWrap-Up #One thing that has frustrated me about online documentation is an implicit assumption of some knowledge of a tool, framework, or paradigm. It\u0026rsquo;s not always the case, and it\u0026rsquo;s a hard problem to solve. After all, a lot of documentation has been written by people who are intimately familiar with a tool and have likely forgotten more about it than the average user of said tool. That frustration was a source of inspiration for choosing to write this article and record the absolute beginner/idiotic mistakes I am prone to making. On that note, hopefully, this has been useful to at least someone and I\u0026rsquo;m not just shouting into the void.\nPlease feel free to contact me by any of the methods on this website\u0026rsquo;s homepage if you have any questions, comments, or concerns. In the meantime, I will work on getting more articles written about my next experiments. Swearzies for realzies this time, I will write more often.\nvia GIPHY\nRealizing that hard work and persistence lead to good things. ","date":"24 April 2023","permalink":"/posts/creating-ansible-homelab-roles/","section":"Posts","summary":"The \u0026ldquo;Joys\u0026rdquo; of Learning #I love the feeling of adding new skills and data points to my resume.","title":"An Idiot's Journey into Automation with Ansible"},{"content":"","date":null,"permalink":"/tags/ansible/","section":"Tags","summary":"","title":"Ansible"},{"content":"","date":null,"permalink":"/tags/automation/","section":"Tags","summary":"","title":"Automation"},{"content":"","date":null,"permalink":"/tags/devops/","section":"Tags","summary":"","title":"Devops"},{"content":"","date":null,"permalink":"/tags/homelab/","section":"Tags","summary":"","title":"Homelab"},{"content":"","date":null,"permalink":"/tags/raspberry-pi/","section":"Tags","summary":"","title":"Raspberry-Pi"},{"content":"","date":null,"permalink":"/tags/sre/","section":"Tags","summary":"","title":"Sre"},{"content":"","date":null,"permalink":"/tags/impostor-syndrome/","section":"Tags","summary":"","title":"Impostor Syndrome"},{"content":"Are We All a Little Masochistic? #\u0026ldquo;Perfect\u0026rdquo; is a loaded word. It conjures up images of the pinnacle of something, the most desired form - the perfect dish, the perfect photo, the perfect solution, etc., etc., etc. Our society venerates stories and examples of what we collectively perceive as perfection, and it becomes the standard we measure ourselves against.\nOn the other hand, \u0026ldquo;good enough\u0026rdquo; often gets a level of disrespect it doesn\u0026rsquo;t deserve. \u0026ldquo;Good enough\u0026rdquo; sounds like \u0026ldquo;complacency\u0026rdquo;, and \u0026ldquo;complacency\u0026rdquo; is almost a dirty word. We can\u0026rsquo;t let \u0026ldquo;good enough\u0026rdquo; happen. Whatever we are working toward must meet that standard of perfection, or it wasn\u0026rsquo;t worth doing in the first place. In the meantime, we cause ourselves untold amount of pain and anguish by measuring ourselves to that standard of \u0026ldquo;perfection\u0026rdquo;. It\u0026rsquo;s like picking up a basketball with the sole goal of beating Kobe in a 1 on 1.\nvia GIPHY\nYou really wanna try your luck in that 1 on 1? To be clear, I\u0026rsquo;m not saying that the pursuit of growth and improvement is not worthwhile. I\u0026rsquo;m not saying that striving for perfection will invariably lead you to wrack and ruin. But I am saying that sometimes, \u0026ldquo;good enough\u0026rdquo; is okay. Sometimes, \u0026ldquo;good enough\u0026rdquo; might just be perfect for the situation.\nMe, Myself, and My Impostor Syndrome #I was a Gifted Child™. Throughout my childhood I was constantly told how much potential I had, how I could do anything I wanted, how far I would go. It felt like I was constantly riding a wave of praise and my expectations of myself grew to match what I was being told. Then, high school and college hit me like a brick to the side of the head.\nvia GIPHY\nMy graceful entrance into adulthood. Suddenly, the conversation changed, and I progressed from not meeting to wasting that same vaunted potential. All of the childhood praise came back as a taunting chorus in my ears, reminding me that I was never as good as I could be. The internal voice repeating these accusations began to have more say in decisions. I began avoiding asking others for help, lest they also think of me as \u0026ldquo;wasted potential\u0026rdquo; or something similar. Any project I started followed a similar cycle: bury myself in research so I could figure out the \u0026ldquo;perfect\u0026rdquo; path, give myself a mean case of information overload, and quit. This cycle provided more ammunition for the internal voice bringing me down, which then lead to more unfinished projects, which\u0026hellip; you get the idea.\nThree particular examples from the last two years come to my mind: my experiments with Nix and a stateless development environment, a productivity system I built using Obisidian.md, and writing this blog.\nMy Home in Disarray #About a year ago, I discovered the magic of dotfiles. As an experienced procrastinator and tinkerer at heart, I immediately set about tweaking my system\u0026rsquo;s configuration. When researching dotfile repositories from other people, I became obsessed with the concept of the perfect single-command (\u0026ldquo;one-liner\u0026rdquo;) automated system install and configuration. After finding more and more repos with one-liner installations, the only goal that seemed worthy to me at the time was a one-liner installation of my own.\nI spent SO MUCH TIME working on that perfect one line installation - compiled notes, starred GitHub repos, bookmarked blog posts and documentation websites. My research lead me to the Nix ecosystem and I began to get visions of configuration glory. After a few weeks, I took stock of my progress and proudly reviewed the reference materials I had collected. \u0026ldquo;This is it,\u0026rdquo; I thought, \u0026ldquo;time to build the most beautiful automated stateless infrastructure system known to humankind.\u0026rdquo; I opened up a text editor on my computer to start working and promptly drew a blank. 😬\nvia GIPHY\nDon't tell my wife how I got the bruise on my forehead. I had SO MANY REFERENCES, but rather than providing the perfect plan to move forward I had instead overloaded myself with information. (Getting flashbacks to the intro? Same.) When I took a step back and reviewed my system, I realized that I didn\u0026rsquo;t have a single dotfile in version control. My environment home configuration was hastily patched together and differed from machine to machine. By this point, I had become so overloaded with potential pitfalls and things to do with Nix that I became paralyzed. In true Alexander fashion, I decided that if I couldn\u0026rsquo;t do it perfectly, I wouldn\u0026rsquo;t do it at all, and instead began using a program called chezmoi to manage my dotfiles. Initially, I told myself that it made more sense for what I wanted, but I knew it was because I had scared myself off from trying Nix.\nvia GIPHY\nCleaning up the mess of notes and bookmarks on my desktop. I persisted with chezmoi until March 2023. After installing Pop! OS on my home desktop and coming face to face with another slog through finding and installing missing packages and tools, I decided to give Nix another try. Thanks to the beautiful Zero-to-Nix website built by Determinate Systems, I was able to get started with Nix flakes and home manager in a new repo. This time instead of setting my only goal as the \u0026ldquo;one liner\u0026rdquo;, I started smaller. My first task was to migrate my Neovim configuration, and only my Neovim configuration, to be managed by Nix. There were a few issues I had to work through to get Nix home-manager running, but I got the new flake set up and working on multiple machines within two days. Attempt #1 to install Nix resulted in a load of unused references that were meant to build up to the perfect solution. Attempt #2 resulted in success and new knowledge precisely because I allowed myself to set a target that was \u0026ldquo;just good enough\u0026rdquo;.\nThe Least Productive Productivity System #Personal productivity systems and the field of \u0026ldquo;personal knowledge management\u0026rdquo; are other interests of mine. I am constantly on the lookout for new ways to squeeze 30 hours of productivity out of the 24 hours in a day. Finding Obsidian.md and the Building a Second Brain movement in 2021 seemed like a gift from the gods. Immediately, I set to work cataloging all my knowledge in the most perfect system ever imagined by humankind.\nvia GIPHY\nYes, I'm sure you can see where this is going. Before I had collected more than 20 notes in my Obsidian vault, I decided to start creating the perfect taxonomy for tagging and organizing notes. This led to me using the Dataview plugin to create the perfectly automated task tracking system and note status tracker. I dumped loads of hours into writing Dataview scripts and testing new vault configurations. I was basically the poster child for premature optimization.\nOk, this is the part where you act surprised.\nWithin a month, the system sat idle and I was no closer to knowledge nirvana. I\u0026rsquo;m also not sure how many times I needed to teach myself Gall\u0026rsquo;s Law: \u0026ldquo;a complex system evolves from a basic system\u0026rdquo;. I wanted to \u0026ldquo;pass GO\u0026rdquo; and step right into the complicated. Since I skipped the most simple and fundamental step of working with a basic system, all my beautiful scripts and ideas were discarded in about a tenth of the time it took to set them up. Of course, I learned my lesson this time and - just kidding, I blamed myself for not creating a good enough system, and promptly walked away from note curation for the better part of a few months.\nvia GIPHY\nMy Obsidian vault proudly displaying my efforts. As with the first failed Nix experiment, the notes vault stayed on my mind even after I thought I moved on. I read stories of people creating their successful systems, and blamed myself for not being creative enough to come up with something similar. Eventually, I decided I had to try again. This time, I wanted to test out a brand new concept of \u0026ldquo;learning from my mistakes.\u0026rdquo; First, I archived all of my previous structures out of sight and focused soley on capturing notes as I felt I needed to. I intentionally avoided any thoughts of tags, statuses, queries, plugins, or library science unless they related to a note I was writing.\nI read a great article recently titled \u0026ldquo;No Architecture is Better Than Bad Architecture\u0026rdquo;. There were a lot of great quotes from the article, but one in particular stood out to me:\nAnother risk is that architecting and structuring your code is a great and fun way to procrastinate.\nWorking on building out my \u0026ldquo;perfect productivity system\u0026rdquo; was all just a way to procrastinate working on a project that would actually fill the vault with useful notes. It was so easy to fall into the trap of thinking that I was making sure that your system will stand the test of time, or you are handling all the edge cases, or insert other excuse here. If there was such a thing as a perfect design, software bugs wouldn\u0026rsquo;t exist and Y2K would have just been a Danish multiple-unit train. As in a lot of other areas of life, you won\u0026rsquo;t know the final form for your code or project until it\u0026rsquo;s released into the wild and fulfills the function it needs to. As Mike Tyson famously said:\nEveryone has a plan until they have to actually use their project.\nOr something like that.\nvia GIPHY\nWhat's your plan? I Ain\u0026rsquo;t No Vonnegut #Growing up, I loved reading and this eventually translated into a love of writing. Creative writing assignments in school were my favorite, and I used to dream up stories and write them down in my journal. Somewhere along the way, I started to compare my writing against my favorite authors and my writing habit started to peter out. If I couldn\u0026rsquo;t pick up a pen and immediately write what I thought of as the \u0026ldquo;perfect\u0026rdquo; novel with the epic adventure of Tolkien, the emotional impact of Hemingway, Vonnegut\u0026rsquo;s humor, and Sanderson\u0026rsquo;s worldbuilding, was it even worth trying?\nvia GIPHY\nMy drafting process I would be delusional if I thought that I was the only person in the world who had ever given up a writing hobby because of impostor syndrome. Even knowing that I am far from the only person struggling with self-esteem induced writer\u0026rsquo;s block, I have struggled get back into writing. Despite reading about how some of my idols have discussed their first drafts I remained afraid of any creative writing endeavor. There are countless daydreams, stories, and adventures that have been discarded from my memory because I refused to let myself create anything imperfect.\nvia GIPHY\nThe later stages of my creative writing idea lifecycle Reading all of the past tense in that paragraph might lead you to ask: \u0026ldquo;What did you do to get over it? How did you master that fear?\u0026rdquo;\nThe short answer is: \u0026ldquo;lol, I wish.\u0026rdquo; There is still a voice in my head that demands perfection and bemoans the inadequacy of my output. I\u0026rsquo;m still not a fan of my writing. Sometimes, I still let that voice make the decisions as to when and how much I work on writing projects.\nBut as with the other examples from this post, I have worked on narrowing my focus to the smallest of \u0026ldquo;good enough\u0026rdquo; steps to build up to larger progress closer to my idea of \u0026ldquo;perfect\u0026rdquo;. This blog is one of those steps. Giving myself a space to be imperfect and find my voice again has given me courage to create more (especially to my current audience of my wife and no one else). I am still working on a method to prevent myself from entering a cycle of endless drafting. Setting a deadline for this post to be published and telling my \u0026ldquo;audience\u0026rdquo; about my plans helped get this one out the door instead of staying as an outline in my notes.\nAdmittedly, the publishing date did slip by a few days because of some external events. But for the first time in close to a decade, I am writing regularly again. Rather than reaching for that all-elusive perfection, I am allowing myself to publish something that is \u0026ldquo;good enough.\u0026rdquo;\nvia GIPHY\nMe telling me that the post won't be ready by the deadline I set for myself. \u0026ldquo;Hey Google, How Do You Land a Plane?\u0026rdquo; #Class, what did we learn today?\nBesides the fact that I need therapy for my self-esteem, we\u0026rsquo;ve learned about the power of allowing something to be \u0026ldquo;good enough.\u0026rdquo; Again, I\u0026rsquo;m not saying that striving for perfection is something to be shunned. Nor am I saying that I will now settle and not seek growth or improvement. But unless scientists figure out a way to instantly transfer knowledge to individuals, I am going to have to continue learning through failure and repetition. I am going to have to be content with producing things that are \u0026ldquo;good enough\u0026rdquo;.\nvia GIPHY\nSide note: if Neuralink can figure out that instant download thing, hit me up Ol' Musky! Trade-offs are an essential part of life. Acknowledging that something is \u0026ldquo;good enough\u0026rdquo; for publish or release is recognizing the diminishing returns of improvement from further iteration without feedback. That assumes that further iteration without feedback results in any improvement at all. Realizing something is \u0026ldquo;good enough\u0026rdquo; is not always settling for less. It is laying a foundation for raising the standard of \u0026ldquo;good enough\u0026rdquo; down the road.\nHow am I actually keeping the idea of perfection from stopping any forward progress? From my experiences above, I\u0026rsquo;ve found a few strategies that have been working well:\nMake project goals granular and focused on single \u0026ldquo;units\u0026rdquo; of work (e.g. migrating one set of dotfiles to Nix versus the entire system) Set due dates for tasks. As mentioned in my 2023 Annual Review, I am frequently a victim of over-planning and this helps to force action over plans. Find at least one win. It\u0026rsquo;s all too easy to focus on the negatives, but by forcing myself to acknowledge at least one positive from every effort sets the stage for more imperfect progress. Noting one win or good thing also helps to focus on the things that I can build on later. Sharing my work. Hiding my projects and progress is often a symptom of being embarrassed that it isn\u0026rsquo;t perfect. Allowing myself to talk about what my projects, even if they are unfinished, has provided incentive to continue working on them. Using something like the \u0026ldquo;Rule of Three\u0026rdquo; when I start to focus a little too much on the \u0026ldquo;clean up\u0026rdquo; tasks before a product is ready. It is a handy benchmarking mechanism to make sure I\u0026rsquo;m procrastinating by \u0026ldquo;tidying something up\u0026rdquo; rather than making actual progress. Watch out as I submit some shitty code to my personal GitHub repos. Keep an eye out for more lackluster blog posts. These efforts may all be far from perfect, but maybe they will be good enough to continue improving.\nvia GIPHY\nTell em, Moira! ","date":"14 March 2023","permalink":"/posts/perfect-as-enemy/","section":"Posts","summary":"Are We All a Little Masochistic?","title":"Keeping Perfect From Being the Enemy of Good Enough"},{"content":"","date":null,"permalink":"/tags/venting/","section":"Tags","summary":"","title":"Venting"},{"content":"","date":null,"permalink":"/tags/writing/","section":"Tags","summary":"","title":"Writing"},{"content":"","date":null,"permalink":"/tags/lifestyle/","section":"Tags","summary":"","title":"Lifestyle"},{"content":"My 2022 Annual Review #In Remembrance #I remember thinking at the start of 2022 that my life was going to change. The email from Brilliant Earth about the engagement ring that I had ordered was burning a hole in my inbox. My younger brother had confessed his plan to propose to his then-girlfriend about a month before the new year. Conversations about buying a house in Seattle were underway. As I write this in 2023, my now-wife Heidi is getting ready to sleep in the fourth state we lived in in the last year. Yeah, \u0026ldquo;my life was going to change\u0026rdquo; may sound clichéd, but it was also a massive understatement.\nHeidi and I celebrating a little too hard on NYE I started off the year in Seattle and Heidi was living in Georgia (long story). We got engaged in May in Vancouver. After getting psychologically crushed by the housing market in Seattle, we decided it would be best to consider a different market to live in, despite our mutual love for Seattle and the Pacific Northwest. We settled on Denver after some consideration, but we needed a place for a few months between moves (another long story). We packed up my stuff in Seattle and moved in with some dear and generous friends in Arizona for all of two months. During this time we eloped, Heidi moved out of Georgia, we visited New York, and we started learning to budget together (which definitely did not result in ANY arguments). After the brief sojourn in Arizona, we headed to Denver, where we\u0026rsquo;ve had at least one free weekend!\nPhoto of the Arizona elopement So, 2022 was the year of change. Terrifying, exhilarating, whirlwind change. Almost every month in 2022 had some major life event occur. Heidi and I were so exhausted by December that we were looking forward to a week of nothing between Christmas and New Year\u0026rsquo;s Eve. Unfortunately, we made our holiday travel plans with Southwest Airlines and they had different ideas for us. At what point are the punches rolling with you instead of the other way \u0026lsquo;round? Now looking out over the horizon that is 2023 and beyond, I want to figure out how to harness the determination that kept me on top of that bull in 2022 into a steadily and gracefully moving into the next phase of our lives.\nWhat is this \u0026ldquo;planning\u0026rdquo; you speak of? #Please don\u0026rsquo;t judge me for what I\u0026rsquo;m about to say: I used to HATE all those SMART goal exercises. In particular, high school me felt that they were an absolute waste of time as most 16-year olds do. I thought I knew better than those trying to teach me and I figured I could just wing it. To be fair, I don\u0026rsquo;t always think winging it is bad and I always want to leave room for improvisation. But as I look back at last year (and the 5 or 6 years before that), I realize that my best leaps forward occurred when I had something that I was marching towards. If you\u0026rsquo;re running a race without a finish line, how likely are you to end up running in circles?\nMy face when I saw the \u0026lsquo;SMART\u0026rsquo; acronym in class. Photo by Jaysin Trevino With that in mind, I wanted to try something different this year. From past experience, I try to avoid \u0026ldquo;radical shifts\u0026rdquo; because those last about as long as it takes for me to download a shiny new app or make a shiny new workflow for myself. Instead, I wanted to start simple. After reading all kinds of annual review posts, newsletters, and blogs I decided to start with some visualization exercises. After leaning a lot on Tiago Forte\u0026rsquo;s wisdom over the last year, I decided to do my best to follow his annual review process to give myself a framework for this new mode of operation. I started with his personal narrative vision exercise before reading about his annual review process and how he sets his goals. Following that general process resulted in me generating the first list of life goals that I didn\u0026rsquo;t write just to satisfy an assignment rubric.\nYou see that look in his eyes? I think he\u0026rsquo;s proud of me. I know the first thought that came into your head after reading that paragraph: \u0026ldquo;But Alexander, if you only make goals but don\u0026rsquo;t change anything else, how are you going to actually achieve them?\u0026rdquo;\nFirst off, you can\u0026rsquo;t tell me how to live my life. Second, you interrupted me. Let me finish!\nThe Winding Path #A plan is useless unless there are some actions coming from it, right? Given my desire to leave room for a little bit of \u0026ldquo;Xander Magic,\u0026rdquo; I don\u0026rsquo;t want to introduce a system that is so rigid I forget how to breathe without written instructions. My tentative \u0026ldquo;plan,\u0026rdquo; if you could call it that, is to implement a bits and pieces of a few different productivity systems in my life. The primary focus will be relying on actions over ideas.\nYou might now be saying, \u0026ldquo;But what does a preference of actions over ideas even mean?\u0026rdquo;\nFor example: in technical areas my imposter syndrome and fear of failure has lead to a tendency to try to make my ideas perfect before I start executing the first action (I\u0026rsquo;m working on another post for that topic). I still do this despite knowing that every time I\u0026rsquo;ve learned from a project has been when I set out on the journey of trying to accomplish a task, fail spectacularly, then pick myself up and figure how to not fuck it up again.\nWith that in mind, I\u0026rsquo;ll focus on setting up projects and tasks to complete and deadlines to complete them by. Ideally, I\u0026rsquo;ll give myself the room to royally screw up and the grace to acknowledge that the screw-up is okay. After all, half of that learning process is my innate ability to absolutely cock things up.\nStill image capture of Alexander learning a new skill. © Warner Bros. Entertainment Inc. There is one more concept I am trying to focus on this year: implementing daily, weekly, and monthly reviews of the tasks and projects that I am working on and completing. Of all things, why reviews? Fair question! I have come to think of reviews as different versions of checking a map as you are following a winding path.\nSometimes you might just take a quick glance to confirm your next turn, sometimes you might stop for a second to visualize the next few things you need to do, and sometimes you might climb up a tree to check for a landmark you should be getting closed to. I have a slight tendency to veer off course and go down rabbit holes on occasion. So if the only thing I get better at this year is consistently checking the map, I\u0026rsquo;ll be happy. I am putting my faith in the repeated mechanism of reviewing my actions to keep me on track and allow me to stay the course as I write my 2023 story.\nPicture of my wife laughing at my massive understatement RE rabbit holes. Photo by Anno Malie My Personal Stories #As part of the visualization exercises, one concept which really stuck with me is the concept of the stories we tell ourselves being constraints to our success. I\u0026rsquo;ve read about this concept in a few places, but the first time it really struck me was when I read a newsletter from Peter Nguyen, whose website and blog: \u0026ldquo;The Essential Man\u0026rdquo;, was my first foray into following newsletters. In Peter\u0026rsquo;s own version of an annual review, he talked about his wife\u0026rsquo;s shyness:\nWhenever she told herself she was shy, it prevented her from going out, meeting new people, and possibly having fun. She had to live up to that story of being shy. And the uncomfortable truth is, we all have stories like this.\nThis quote really resounded with me, to the point that I saved it to use in this post. I have long-held narratives in my head that have prevented me from seeing past my perceived faults and failures to my positive traits or successes. Towards the end of 2022, I began to push my manager and my team for a promotion in my current role. This was the first time in my career I had done something like this, and it scared the bejeesus out out me. It was even more bewildering was when people agreed with me that I was ready. Fresh out of that situation, Peter\u0026rsquo;s annual review struck a chord. I began to think harder about all of my personal narratives that played on loop in my head.\nStories I\u0026rsquo;m Leaving Behind #This first category is somewhat strange to me, because I\u0026rsquo;ve never sat down and thought about all of my negative self-talk. It\u0026rsquo;s been enlightening to stop and detect when these narratives take over:\nI can\u0026rsquo;t finish projects I\u0026rsquo;m not cut out for tech I have to know everything and be perfect before I attempt a new skill or hobby I need alcohol to be more fun and sociable Stories I\u0026rsquo;m Trying to Tell #Have you ever tried talking positively to yourself and mean it? Chances are unless you are a narcissist, Joe Rogan, or Logan Paul, you probably felt a bit like a douchebag. I know I did when trying to think of stories that I wanted to tell moving forward:\nI take charge of my own destiny; I don\u0026rsquo;t wait for the perfect moment or opportunity. I am a builder. I may not always get it right on the first try but I will keep learning and striving for better. I can surprise even those who are closest to me. Planting the Flag #Finally, one last annual review mainstay I have to do to wrap this up: one word or phrase to describe what I want out of this year. This was another visualization exercise that resonated with me. Going back to having some sort of \u0026ldquo;North Star\u0026rdquo; to march towards, one word or phrase to set my hat on means I don\u0026rsquo;t constantly have to have this essay in the back of my mind, nor do I have to keep my list of goals as my wallpaper on my phone. One word is easy enough to remember and reflect on when I am at a crossroads.\nvia GIPHY\nMy mental image while writing this section When I started thinking about one word to distill my goals and desires into, I kept coming back to one thought: as someone with ADHD, \u0026ldquo;variable\u0026rdquo; is practically my middle name. Ideas, plans, workflows - all are liable to change at a moment\u0026rsquo;s notice. I have gone through more productivity systems and daily workflows than shoes in the last two or three years. With that in mind, I selected the word consistency. There are a multitude of activities and areas in my life where this applies:\nHealth (mental and physical): daily stretches, meditation, diet Hobbies: jiu jitsu, climbing, strength training for both Work/Life: Review cycles, self-enforced deadlines for projects, celebrating wins and not just mourning losses, date nights with wifey One more quote from Peter that stuck with me:\nStriving for better requires constant reflection and effort.\nBig dreams are all well and good, but they are only dreams if there is no effort behind them. I want to be that person that dreams big and achieves their dreams. I want to be someone who builds, who learns, who charts their own path and follows it. I want to be consistent in my efforts to be better every day.\n","date":"21 January 2023","permalink":"/posts/annual-review/","section":"Posts","summary":"My 2022 Annual Review #In Remembrance #I remember thinking at the start of 2022 that my life was going to change.","title":"My 2022 Annual Review"},{"content":"","date":null,"permalink":"/tags/new-year/","section":"Tags","summary":"","title":"New-Year"},{"content":"","date":null,"permalink":"/tags/productivity/","section":"Tags","summary":"","title":"Productivity"},{"content":"","date":null,"permalink":"/tags/second-brain/","section":"Tags","summary":"","title":"Second-Brain"},{"content":"","date":null,"permalink":"/tags/visualization/","section":"Tags","summary":"","title":"Visualization"},{"content":"Overview #Hello, and welcome to my first blog post! As I mentioned in my headline and bio, I have a lot of interests and hobbies, so the topics of my blog posts may jump around a bit. Today\u0026rsquo;s post is about taking \u0026ldquo;smart notes\u0026rdquo;, a concept I learned about from reading the book \u0026ldquo;How to take Smart Notes: One Simple Technique to Boost Writing, Learning and Thinking\u0026rdquo; by Sönke Ahrens. I am particularly focusing on the application of smart notes in the world of engineering.\nWhy does this matter? #If there is one thing I\u0026rsquo;ve learned from the years I\u0026rsquo;ve spent in the tech field, it\u0026rsquo;s that very few people know as much as you think they do. Everyone is constantly learning and figuring things out as they go.\nquote from about me that might fit in better here:\nWorking as an engineer has taught me two important things: 1) nobody knows everything, and 2) the only limit to \u0026#34;things left to learn\u0026#34; is someone\u0026#39;s time and desire. I have had the privilege to work with some very smart, talented, and experienced engineers. Each and every one has at some point said, \u0026#34;I don\u0026#39;t know\u0026#34;. ","date":"6 September 2022","permalink":"/posts/engineers-and-notes/","section":"Posts","summary":"Overview #Hello, and welcome to my first blog post!","title":"Engineers and Smart Notes"},{"content":"","date":null,"permalink":"/tags/personal-knowledge-management/","section":"Tags","summary":"","title":"Personal-Knowledge-Management"},{"content":"","date":null,"permalink":"/","section":"","summary":"","title":""},{"content":"","date":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"}]